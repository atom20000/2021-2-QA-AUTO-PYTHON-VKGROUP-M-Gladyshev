version: '2.1'

networks:
  network_compose:
    external:
      name: ${NETWORK}

services:
  mysql:
    networks:
      network_compose: null
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: QA_myapp
      MYSQL_USER: test_qa
      MYSQL_PASSWORD: qa_test

    image: "mysql:5.7"
    
    volumes:
      - ./config/db_docker:/docker-entrypoint-initdb.d

    healthcheck:
      test: ["CMD", "mysqladmin","-uroot","-ppass","ping","-h","127.0.0.1"]
      timeout: 1s
      retries: 30

  vk_mock:
    networks:
      network_compose: null

    image: "vk_mock:latest"

    environment:
      - HOST=0.0.0.0
      - PORT=8081

  qa_myapp:
    networks:
      network_compose: null

    image:  "myapp:latest"

    volumes:
      - ./config/app_docker:/tmp/conf
    entrypoint: /app/myapp --config=/tmp/conf/config

    ports:
      - "8081:8080"
    
    depends_on:
      mysql:
        condition: service_healthy

  qa_myapp_proxy:
    networks:
      network_compose: null
    image: "nginx:stable"
    volumes:
      - ./config/proxy_conf/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      qa_myapp:
        condition: service_started
    
  selenoid:
    networks:
      network_compose: null

    image: "aerokube/selenoid:latest"

    volumes:
      - ./config/selenoid_docker:/etc/selenoid
      - /var/run/docker.sock:/var/run/docker.sock
    
    command: ["-conf", "/etc/selenoid/browser.json", "-container-network", "${NETWORK}"]

  tests:
    networks:
      network_compose: null
      
    image: "tests_do:latest"
    tty: true
    stdin_open: true
    environment:
      - MARK=${MARK}
      - N=${WORKERS}
    volumes:
      - ./testing:/tmp/testing
      - $WORKSPACE/alluredir:/tmp/allure
    entrypoint: /bin/bash /tmp/testing/start_tests.sh
    depends_on:
      qa_myapp_proxy:
        condition: service_started
