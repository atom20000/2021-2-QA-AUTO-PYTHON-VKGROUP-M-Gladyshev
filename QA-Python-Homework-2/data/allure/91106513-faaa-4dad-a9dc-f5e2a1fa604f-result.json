{"name": "test_create_segment", "status": "broken", "statusDetails": {"message": "RuntimeError: No active exception to reraise", "trace": "cookies_login = [{'domain': '.my.com', 'expiry': 1636797073, 'httpOnly': False, 'name': '_gid', ...}, {'domain': '.my.com', 'expiry': ...', ...}, {'domain': '.target.my.com', 'expiry': 1636710729, 'httpOnly': False, 'name': '_gat_UA-54874995-1', ...}, ...]\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5d2aabb7b5835698622130d40d1f1d7b\")>\n\n    @pytest.fixture(scope='function')\n    def auto_main_page(cookies_login, driver):\n        for cookie in cookies_login:\n            driver.add_cookie(cookie)\n        driver.refresh()\n        with allure.step('Cookies added'):\n>           return DashboardPage(driver=driver)\n\nfixtures.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:18: in __init__\n    self.is_opened()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.dashboard_page.DashboardPage object at 0x7f6e0d7f4fa0>\ntimeout = 10\n\n    def is_opened(self,timeout=10):\n        start = time.time()\n        while time.time()-start < timeout:\n            if self.driver.current_url.find(self.url) != -1:\n                self.logger.info(f\"Page:{self.url} is opened\")\n                return True\n        self.logger.warning(f\"Page:{self.url} isn't opened\")\n>       raise\nE       RuntimeError: No active exception to reraise\n\npages/base_page.py:27: RuntimeError"}, "attachments": [{"name": "log", "source": "41a20805-4471-4ac3-8a6b-febe30d248cb-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "8a27aaab-e0de-4716-b32c-d206b4390951-attachment.txt", "type": "text/plain"}], "start": 1636710663914, "stop": 1636710663914, "uuid": "a54c87e4-0a11-411f-be7d-e64d154d2726", "historyId": "50bcedd3f9835bdeb4ae1e884a311aa9", "testCaseId": "cb8de946c11adbb2ee846d41bc70067d", "fullName": "test_#test_create_segment", "labels": [{"name": "story", "value": "Segment tests"}, {"name": "epic", "value": "Awesome PyTest framework"}, {"name": "feature", "value": "UI tests"}, {"name": "tag", "value": "UI"}, {"name": "suite", "value": "test_"}, {"name": "host", "value": "DESKTOP-K974TT7"}, {"name": "thread", "value": "15929-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_"}], "links": [{"type": "test_case", "url": "Create segment test", "name": "Create segment test"}]}